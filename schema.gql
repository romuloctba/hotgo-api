# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffiliateEntity {
  id: ID!
  userId: String!
  storeIds: [String!]!
  status: String!
  createdAt: DateTime!
  modifiedAt: DateTime!
  revision: Float!
}

type ComissionEntity {
  id: ID!
  amount: Float!
  productId: String!
  product: ProductEntity!
  affiliateId: String!
  affiliate: AffiliateEntity!
  supplierId: String!
  supplier: SupplierEntity!
  status: Int!
}

input CreateCustomerDto {
  userId: String!
}

input CreateProductDto {
  supplierId: String!
  name: String!
  categories: [String!]!
  tags: [String!]!
  price: Float!
}

input CreateStoreDto {
  supplierId: String!
  name: String!
  themeId: String!
}

input CreateSupplierDto {
  userId: String!
}

input CreateUserDto {
  email: String!
  password: String!
  phone: String!
  firstName: String!
  lastName: String!
}

type CustomerEntity {
  id: ID!
  userId: String!
  user: UserEntity!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input LoginDto {
  username: String!
  password: String!
}

type Mutation {
  createUser(user: CreateUserDto!): UserEntity!
  createStore(store: CreateStoreDto!): StoreEntity!
  addProductsToStore(productIds: [String!]!, storeId: String!): StoreEntity!
  createSupplier(supplier: CreateSupplierDto!): SupplierEntity!
  createProduct(product: CreateProductDto!): ProductEntity!
  createCustomer(customer: CreateCustomerDto!): CustomerEntity!
  login(loginDto: LoginDto!): SuccessJwtLoginResponse!
}

"""Price scalar type"""
scalar Price

type ProductEntity {
  id: ID!
  name: String!
  categories: [String!]!
  tags: [String!]!
  supplierId: String!
  supplier: SupplierEntity!
  price: Price!
  availableComissionIds: [String!]!
}

type Query {
  user(id: String!): UserEntity!
  getUsers: [UserEntity!]!
  getStores: [StoreEntity!]!
  getSuppliers: [SupplierEntity!]!
  getProducts: [ProductEntity!]!
  getProduct(id: String!): ProductEntity!
  getCustomers: [CustomerEntity!]!
  customer(userId: String!): CustomerEntity!
  customerByUserId(userId: String!): CustomerEntity!
}

type StoreEntity {
  id: ID!
  name: String!
  supplierId: String!
  supplier: SupplierEntity!
  themeId: String!
  productIds: [String!]!
  products: [ProductEntity!]!
}

type SuccessJwtLoginResponse {
  access_token: String!
}

type SupplierEntity {
  id: ID!
  userId: String!
  user: UserEntity!
  stores: [String!]!
}

type UserEntity {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  status: Float!
  createdAt: DateTime!
  modifiedAt: DateTime!
}
